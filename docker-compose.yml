# Docker Compose para o Sistema de Gestão de Licitações Governamentais
# Configuração dos serviços necessários para o ambiente de desenvolvimento e produção

version: '3'

services:
  # Serviço do backend com FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bids_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-chave_secreta_temporaria}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    restart: always

  # Serviço do frontend com React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    restart: always

  # Serviço do banco de dados PostgreSQL
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=bids_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  # Serviço de cache Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  # Serviço de processamento de tarefas em background com Celery
  celery:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: celery -A app.worker worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bids_db
      - REDIS_URL=redis://redis:6379/0
    restart: always

  # Serviço de monitoramento com Prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

  # Serviço de visualização de métricas com Grafana
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always

# Volumes para persistência de dados
volumes:
  postgres_data:
  redis_data:
  grafana_data:
